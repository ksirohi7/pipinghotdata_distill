<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>PIPING HOT DATA</title>
    <link>https://www.pipinghotdata.com</link>
    <atom:link href="https://www.pipinghotdata.com/blog.xml" rel="self" type="application/rss+xml"/>
    <description>The personsal website of Shannon Pileggi
</description>
    <generator>Distill</generator>
    <lastBuildDate>Mon, 01 Nov 2021 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Getting started with unit testing in R</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2021-11-01-unit-testing</link>
      <description>


&lt;h1 id="tldr"&gt;TL;DR&lt;/h1&gt;
&lt;h1 id="abstract"&gt;Abstract&lt;/h1&gt;
&lt;p&gt;In this workshop, Shannon Pileggi and Gordon Shotwell discuss how to get started with unit testing in R, which is formal automated testing of functions within packages. We demonstrate handy functions in &lt;code&gt;usethis&lt;/code&gt; and &lt;code&gt;devtools&lt;/code&gt;, strategies for writing tests, debugging techniques, and broad concepts in function writing that facilitate a smoother testing process.&lt;/p&gt;
&lt;p&gt;This workshop picks up exactly where we left our little &lt;code&gt;ralph&lt;/code&gt; (aka &lt;strong&gt;R&lt;/strong&gt;-&lt;strong&gt;L&lt;/strong&gt;adies &lt;strong&gt;Ph&lt;/strong&gt;illy) package one year ago with &lt;a href="https://www.pipinghotdata.com/posts/2020-10-25-your-first-r-package-in-1-hour/" target="_blank"&gt;“Your first R package in 1 hour: Tools that make R package development easy”&lt;/a&gt;. Participants will get the most out of this workshop if they review those materials in advance, or if they are already familiar with building R packages with &lt;code&gt;devtools&lt;/code&gt; and &lt;code&gt;usethis&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id="packages"&gt;Packages&lt;/h1&gt;
&lt;p&gt;This material was developed using:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th&gt;Software / package&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;4.1.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;RStudio&lt;/td&gt;
&lt;td&gt;351 “Ghost Orchid”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;code&gt;usethis&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2.1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;code&gt;devtools&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2.4.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;code&gt;testthat&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3.1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;code&gt;broom&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;0.7.9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id="getting-started"&gt;Getting started&lt;/h1&gt;
&lt;p&gt;You can work either (1) locally or (2) with GitHub.&lt;/p&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;p&gt;To work locally, click the green &lt;code&gt;Code&lt;/code&gt; button and download the zipped &lt;code&gt;ralphGetsTested&lt;/code&gt; repository.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To work through GitHub, fork and clone this repository with &lt;code&gt;usethis::create_from_github("shannonpileggi/ralphGetsTested")&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id="intros"&gt;Intros&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Native language&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Thank Gordon&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is unit testing / why do it?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Presenters experience with unit testing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Attendees experience with unit testing.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="notes"&gt;Notes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;devtools::check()&lt;/code&gt; confirm error free&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;devtools::load_all()&lt;/code&gt; command shift L&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;?compute_corr&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;compute_corr(data = faithful, var1 = eruptions, var2 = waiting)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;review function&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;usethis::use_testthat()&lt;/code&gt; to create overall testing infrastructure - ONE TIME&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;usethis::use_test("compute_corr")&lt;/code&gt; to create a new test file&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;WHAT TO NAME THIS FILE? - same as function name&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WHAT TO NAME TESTS IN THIS FILE?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It can be whatever also the name can have spaces. It’s just something that tells you what failed when the test fails&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;So there’s no right name, it’s just something that reminds future you where the failing test is&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tests define correctness for your code - what do i care that is right?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;higher risk would do more tests&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to run tests &lt;code&gt;devtools::test()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;run tests button runs test in fresh environment; devtools test in global environment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;browser() in function for troubleshooting&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;covr::report&lt;/code&gt; percent of code covered&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;restart R, then run&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;THIS ISNT WORKING&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;covr::report&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;put &lt;code&gt;browser()&lt;/code&gt; in function for debugging - NOT IN A PIPE&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to test variables in input data set, create a message/warning &amp;amp; test for that message/warning&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Restart R -&amp;gt; cntrl + shift + F10&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="testing-code"&gt;Testing code&lt;/h1&gt;
&lt;p&gt;To enter one at a time.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;test_that(&amp;quot;length&amp;quot;, {
  expected &amp;lt;- compute_corr(data = faithful, var1 = eruptions, var2 = waiting)
  expect_s3_class(expected, &amp;quot;data.frame&amp;quot;)
  expect_equal(dim(expected), c(1,2))
  expect_named(expected, c(&amp;quot;correlation&amp;quot;, &amp;quot;pval&amp;quot;))
  # can run without tolerance
  expect_equal(expected[[&amp;quot;correlation&amp;quot;]], 0.901, tolerance = 0.001)
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Correction to add to &lt;code&gt;compute_corr&lt;/code&gt; for &lt;code&gt;expect_equal&lt;/code&gt; to pass:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# remove attribute name from results
attr(results$correlation, &amp;quot;names&amp;quot;) &amp;lt;- NULL&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="distinguishing-messagewarningerror"&gt;Distinguishing message/warning/error:&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://adv-r.hadley.nz/conditions.html#signalling-conditions" class="uri"&gt;https://adv-r.hadley.nz/conditions.html#signalling-conditions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Error to add to &lt;code&gt;compute_corr&lt;/code&gt; to evaluate inputs:&lt;/p&gt;
&lt;p&gt;Errors are the most severe; they indicate that there is no way for a function to continue and execution must stop.&lt;/p&gt;
&lt;p&gt;Warnings fall somewhat in between errors and message, and typically indicate that something has gone wrong but the function has been able to at least partially recover.&lt;/p&gt;
&lt;p&gt;Messages are the mildest; they are way of informing users that some action has been performed on their behalf.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;stop(&amp;quot;This is what an error looks like&amp;quot;)
#&amp;gt; Error in eval(expr, envir, enclos): This is what an error looks like

warning(&amp;quot;This is what a warning looks like&amp;quot;)
#&amp;gt; Warning: This is what a warning looks like

message(&amp;quot;This is what a message looks like&amp;quot;)
#&amp;gt; This is what a message looks like&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="checking-variable-names"&gt;checking variable names&lt;/h1&gt;
&lt;p&gt;Add to function body:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;  # convert variable names to character strings
  var1_chr &amp;lt;- rlang::as_label(rlang::ensym(var1))
  var2_chr &amp;lt;- rlang::as_label(rlang::ensym(var2))

  # alert user if variable not in data set ----
  if (!(var1_chr %in% names(data))){
    #stop(glue::glue(&amp;quot;{var1_chr} not in data set.&amp;quot;))
    usethis::ui_stop(&amp;quot;{var1_chr} is not in the data set.&amp;quot;)
  }

  # alert user if variable not in data set ----
  if (!(var2_chr %in% names(data))){
    #stop(glue::glue(&amp;quot;{var2_chr} not in data set.&amp;quot;))
    usethis::ui_stop(&amp;quot;{var2_chr} is not in the data set.&amp;quot;)
  }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add to test&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;test_that(&amp;quot;length&amp;quot;, {
  # evaluate correctness of output produced ----
  expected &amp;lt;- compute_corr(data = faithful, var1 = eruptions, var2 = waiting)
  expect_s3_class(expected, &amp;quot;data.frame&amp;quot;)
  expect_equal(dim(expected), c(1,2))
  expect_named(expected, c(&amp;quot;correlation&amp;quot;, &amp;quot;pval&amp;quot;))
  expect_equal(expected[[&amp;quot;correlation&amp;quot;]], 0.901, tolerance = 0.001)
  # catching errors ----
  expect_error(compute_corr(data = faithful, var1 = erruptions, var2 = waiting))
})&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;devtools::test()&lt;/code&gt; passes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;devtools::check()&lt;/code&gt; has a warning&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;usethis::use_package("usethis")&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;devtools::check()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="challenge-function"&gt;Challenge function&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Can we break this up to make it easier to test?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What type of object should the function output?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What type of object does this function expect, can we put up guardrails so the user doesn’t send the wrong thing? How do we test those guardrails?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="original"&gt;original&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;usethis::use_r("awesome_rladies")&lt;/code&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;awesome_rladies &amp;lt;- function(v) {
  
  sapply(v, function(x) {
    if (x == 1) {
      verb &amp;lt;- &amp;quot;is&amp;quot;
      noun &amp;lt;- &amp;quot;RLady&amp;quot;
    }
    
    if (x &amp;gt; 1) {
      verb &amp;lt;- &amp;quot;are&amp;quot;
      noun &amp;lt;- &amp;quot;RLadies&amp;quot;
    }
    
    as.character(glue::glue(&amp;quot;There {verb} {x} awesome {noun}!&amp;quot;))
  })
}&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="broken-up"&gt;broken up&lt;/h2&gt;
&lt;pre class="r"&gt;&lt;code&gt;write_rladies &amp;lt;- function(x){
  if (x == 1) {
    verb &amp;lt;- &amp;quot;is&amp;quot;
    noun &amp;lt;- &amp;quot;RLady&amp;quot;
  } 
  
  if(x &amp;gt; 1) {
    verb &amp;lt;- &amp;quot;are&amp;quot;
    noun &amp;lt;- &amp;quot;RLadies&amp;quot;
  }
  
  as.character(glue::glue(&amp;quot;There {verb} {x} awesome {noun}!&amp;quot;))
}




compose_rladies &amp;lt;- function(x){
  #sapply(x, write_rladies)
  purrr::map_chr(x, write_rladies)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;usethis::use_test()&lt;/code&gt; to create a second test file, right?&lt;/p&gt;
&lt;h2 id="tests"&gt;tests&lt;/h2&gt;
&lt;pre class="r"&gt;&lt;code&gt;usethis::use_test(&amp;quot;awesome_rladies&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;what to name test?&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;test_that(&amp;quot;assess-awesome_rladies&amp;quot;, {
  # evaluate output produced ----
  expected &amp;lt;- write_rladies(1)
  expect_type(expected, &amp;quot;character&amp;quot;)
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;add to function&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;write_rladies &amp;lt;- function(x){
  
 if ( !(is.numeric(x) &amp;amp; (x &amp;gt;= 1)) ){
    usethis::ui_stop(&amp;quot;Input must be numeric and greater than or equal to 1.&amp;quot;)
  }

  
  if (x == 1) {
    verb &amp;lt;- &amp;quot;is&amp;quot;
    noun &amp;lt;- &amp;quot;RLady&amp;quot;
  } 
  
  if(x &amp;gt; 1) {
    verb &amp;lt;- &amp;quot;are&amp;quot;
    noun &amp;lt;- &amp;quot;RLadies&amp;quot;
  }
  
  glue::glue(&amp;quot;There {verb} {x} awesome {noun}!&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;add to test, need to work through this more&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;test_that(&amp;quot;correct&amp;quot;, {
  # evaluate output produced ----
  expected_1 &amp;lt;- write_rladies(1)
  expected_2 &amp;lt;- write_rladies(2)
  expect_type(expected_1, &amp;quot;character&amp;quot;)
  expect_equal(expected_1, &amp;quot;There is 1 awesome RLady!&amp;quot;)
  expect_equal(expected_2, &amp;quot;There are 2 awesome RLadies!&amp;quot;)
  # ----
  expected_multiple &amp;lt;- compose_rladies(1:2)
  expect_length(expected_multiple, 2)
  # catching errors ----
  expect_error(compose_rladies(&amp;quot;a&amp;quot;))
  expect_error(compose_rladies(0))
})&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>8edaa5480be9b16020103993bae8513d</distill:md5>
      <guid>https://www.pipinghotdata.com/posts/2021-11-01-unit-testing</guid>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Estimating correlations adjusted for group membership</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2021-10-11-estimating-correlations-adjusted-for-group-membership</link>
      <description>A linear mixed model approach with applied examples in a Palmer penguins Simpson's paradox and TidyTuesday Spotify songs</description>
      <guid>https://www.pipinghotdata.com/posts/2021-10-11-estimating-correlations-adjusted-for-group-membership</guid>
      <pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2021-10-11-estimating-correlations-adjusted-for-group-membership/img/thumbnail.PNG" medium="image" type="image/png" width="960" height="540"/>
    </item>
    <item>
      <title>Curating for @WeAreRLadies on Twitter</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2021-09-23-curating-for-wearerladies-on-twitter</link>
      <description>From creating content to cultivating connections.</description>
      <guid>https://www.pipinghotdata.com/posts/2021-09-23-curating-for-wearerladies-on-twitter</guid>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2021-09-23-curating-for-wearerladies-on-twitter/img/arno-smit-iI72r3gSwWY-unsplash.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>A tidyverse pivot approach to data preparation in R</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2021-08-27-a-tidyverse-pivot-approach-to-data-preparation-in-r</link>
      <description>Going from wide to long with #TidyTuesday beach volleyball</description>
      <guid>https://www.pipinghotdata.com/posts/2021-08-27-a-tidyverse-pivot-approach-to-data-preparation-in-r</guid>
      <pubDate>Fri, 27 Aug 2021 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2021-08-27-a-tidyverse-pivot-approach-to-data-preparation-in-r/gatherspread_modified.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>Polished summary tables in R with gtsummary</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2021-07-14-polished-summary-tables-in-r-with-gtsummary</link>
      <description>Also plays well with labelled data</description>
      <guid>https://www.pipinghotdata.com/posts/2021-07-14-polished-summary-tables-in-r-with-gtsummary</guid>
      <pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2021-07-14-polished-summary-tables-in-r-with-gtsummary/r-gtsummary.png" medium="image" type="image/png" width="2540" height="1932"/>
    </item>
    <item>
      <title>Custom interactive sunbursts with ggplot in R</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2021-06-01-custom-interactive-sunbursts-with-ggplot-in-r</link>
      <description>geom_rect() + geom_coord() + {ggiraph}</description>
      <guid>https://www.pipinghotdata.com/posts/2021-06-01-custom-interactive-sunbursts-with-ggplot-in-r</guid>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2021-06-01-custom-interactive-sunbursts-with-ggplot-in-r/sunburst_preview.PNG" medium="image" type="image/png" width="528" height="475"/>
    </item>
    <item>
      <title>Deploy previews with Netlifly</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2021-04-01-deploy-previews-with-netlifly</link>
      <description>Collaborative {distill} website workflows</description>
      <guid>https://www.pipinghotdata.com/posts/2021-04-01-deploy-previews-with-netlifly</guid>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2021-04-01-deploy-previews-with-netlifly/img/netlifly-checks.png" medium="image" type="image/png" width="1358" height="704"/>
    </item>
    <item>
      <title>R-Ladies styled code gifs with xaringan and flipbookr</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2021-03-08-r-ladies-styled-code-gifs-with-xaringan-and-flipbookr</link>
      <description>The code behind my @WeAreRLadies curating week</description>
      <guid>https://www.pipinghotdata.com/posts/2021-03-08-r-ladies-styled-code-gifs-with-xaringan-and-flipbookr</guid>
      <pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2021-03-08-r-ladies-styled-code-gifs-with-xaringan-and-flipbookr/walrus-adjusted.png" medium="image" type="image/png" width="1536" height="861"/>
    </item>
    <item>
      <title>GGanimating a geographic introduction</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2021-02-15-gganimating-a-geographic-introduction</link>
      <description>A gif for social media</description>
      <guid>https://www.pipinghotdata.com/posts/2021-02-15-gganimating-a-geographic-introduction</guid>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2021-02-15-gganimating-a-geographic-introduction/homes_preview.png" medium="image" type="image/png" width="919" height="461"/>
    </item>
    <item>
      <title>From gmailr to the Google Books API</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2021-01-11-from-gmailr-to-the-google-books-api</link>
      <description>A parenting project to catalog my childrens' 2020 library history</description>
      <guid>https://www.pipinghotdata.com/posts/2021-01-11-from-gmailr-to-the-google-books-api</guid>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2021-01-11-from-gmailr-to-the-google-books-api/preview_books.png" medium="image" type="image/png" width="705" height="459"/>
    </item>
    <item>
      <title>Leveraging labelled data in R</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2020-12-23-leveraging-labelled-data-in-r</link>
      <description>Embracing SPSS, SAS, and Stata data sets with the haven, labelled, and sjlabelled packages</description>
      <guid>https://www.pipinghotdata.com/posts/2020-12-23-leveraging-labelled-data-in-r</guid>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2020-12-23-leveraging-labelled-data-in-r/labelled_preview.png" medium="image" type="image/png" width="671" height="617"/>
    </item>
    <item>
      <title>Your first R package in 1 hour</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2020-10-25-your-first-r-package-in-1-hour</link>
      <description>Tools that make R package development easy</description>
      <guid>https://www.pipinghotdata.com/posts/2020-10-25-your-first-r-package-in-1-hour</guid>
      <pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2020-10-25-your-first-r-package-in-1-hour/workshop_thumnnail4.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>Exporting editable ggplot graphics to PowerPoint with officer and purrr</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2020-09-22-exporting-editable-ggplot-graphics-to-powerpoint-with-officer-and-purrr</link>
      <description>What, why, how, when, and who</description>
      <guid>https://www.pipinghotdata.com/posts/2020-09-22-exporting-editable-ggplot-graphics-to-powerpoint-with-officer-and-purrr</guid>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2020-09-22-exporting-editable-ggplot-graphics-to-powerpoint-with-officer-and-purrr/data_cowboy_officer.png" medium="image" type="image/png" width="678" height="382"/>
    </item>
    <item>
      <title>Introducing RStudio and R Markdown</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2020-09-07-introducing-the-rstudio-ide-and-r-markdown</link>
      <description>Gettin' giffy wit it.</description>
      <guid>https://www.pipinghotdata.com/posts/2020-09-07-introducing-the-rstudio-ide-and-r-markdown</guid>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2020-09-07-introducing-the-rstudio-ide-and-r-markdown/introducing_resize2.png" medium="image" type="image/png" width="473" height="371"/>
    </item>
    <item>
      <title>A job interview presentation inspired by the R community</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2020-08-30-a-job-interview-presentation-inspired-by-the-r-community</link>
      <description>How #tidytuesday and twitter helped me secure a job offer</description>
      <guid>https://www.pipinghotdata.com/posts/2020-08-30-a-job-interview-presentation-inspired-by-the-r-community</guid>
      <pubDate>Sun, 30 Aug 2020 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2020-08-30-a-job-interview-presentation-inspired-by-the-r-community/welcome_to_rstats_twitter.png" medium="image" type="image/png" width="2009" height="1942"/>
    </item>
    <item>
      <title>Stringr 4 ways</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2018-12-11-stringr-4-ways</link>
      <description>Four approaches to feature engineering with regular expressions in R</description>
      <guid>https://www.pipinghotdata.com/posts/2018-12-11-stringr-4-ways</guid>
      <pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2018-12-11-stringr-4-ways/table2.png" medium="image" type="image/png" width="1010" height="319"/>
    </item>
    <item>
      <title>Welcome to Piping Hot Data</title>
      <dc:creator>Shannon Pileggi</dc:creator>
      <link>https://www.pipinghotdata.com/posts/2018-11-05-welcome-to-piping-hot-data</link>
      <description>What's in a name?</description>
      <guid>https://www.pipinghotdata.com/posts/2018-11-05-welcome-to-piping-hot-data</guid>
      <pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate>
      <media:content url="https://www.pipinghotdata.com/posts/2018-11-05-welcome-to-piping-hot-data/tidyverse_celestial.png" medium="image" type="image/png" width="2048" height="2048"/>
    </item>
  </channel>
</rss>
